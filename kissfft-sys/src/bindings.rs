#![allow(non_upper_case_globals)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]

/* automatically generated by rust-bindgen 0.55.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct kiss_fft_cpx {
    pub r: f32,
    pub i: f32,
}
#[test]
fn bindgen_test_layout_kiss_fft_cpx() {
    assert_eq!(
        ::std::mem::size_of::<kiss_fft_cpx>(),
        8usize,
        concat!("Size of: ", stringify!(kiss_fft_cpx))
    );
    assert_eq!(
        ::std::mem::align_of::<kiss_fft_cpx>(),
        4usize,
        concat!("Alignment of ", stringify!(kiss_fft_cpx))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<kiss_fft_cpx>())).r as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(kiss_fft_cpx),
            "::",
            stringify!(r)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<kiss_fft_cpx>())).i as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(kiss_fft_cpx),
            "::",
            stringify!(i)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct kiss_fft_state {
    _unused: [u8; 0],
}
pub type kiss_fft_cfg = *mut kiss_fft_state;
extern "C" {
    pub fn kiss_fft_alloc(
        nfft: ::std::os::raw::c_int,
        inverse_fft: ::std::os::raw::c_int,
        mem: *mut ::std::os::raw::c_void,
        lenmem: *mut usize,
    ) -> kiss_fft_cfg;
}
extern "C" {
    pub fn kiss_fft(cfg: kiss_fft_cfg, fin: *const kiss_fft_cpx, fout: *mut kiss_fft_cpx);
}
extern "C" {
    pub fn kiss_fft_stride(
        cfg: kiss_fft_cfg,
        fin: *const kiss_fft_cpx,
        fout: *mut kiss_fft_cpx,
        fin_stride: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn kiss_fft_cleanup();
}
extern "C" {
    pub fn kiss_fft_next_fast_size(n: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct kiss_fftr_state {
    _unused: [u8; 0],
}
pub type kiss_fftr_cfg = *mut kiss_fftr_state;
extern "C" {
    pub fn kiss_fftr_alloc(
        nfft: ::std::os::raw::c_int,
        inverse_fft: ::std::os::raw::c_int,
        mem: *mut ::std::os::raw::c_void,
        lenmem: *mut usize,
    ) -> kiss_fftr_cfg;
}
extern "C" {
    pub fn kiss_fftr(cfg: kiss_fftr_cfg, timedata: *const f32, freqdata: *mut kiss_fft_cpx);
}
extern "C" {
    pub fn kiss_fftri(cfg: kiss_fftr_cfg, freqdata: *const kiss_fft_cpx, timedata: *mut f32);
}
